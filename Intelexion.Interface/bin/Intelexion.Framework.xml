<?xml version="1.0"?>
<doc>
<assembly>
<name>
Intelexion.Framework
</name>
</assembly>
<members>
<member name="M:Intelexion.Framework.Extensibility.Entities.CargarInformacionParaAutocompletar(Intelexion.Framework.Extensibility.Entity)">
	<summary>
 Carga la información para autocompletar
 </summary>
	<param name="entity"></param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.Entities.CargarInformacionParaPoblar(Intelexion.Framework.Extensibility.Entity)">
	<summary>
 Carga la información para llenar combos
 </summary>
	<param name="entity"></param>
	<remarks></remarks>
</member><member name="T:Intelexion.Framework.Extensibility.BPHAutocompletar">
	<summary>
 BPH para obtener informacion de autocompletar.
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.ComboDao.ConsultarValorDeCombo(Intelexion.Framework.Extensibility.Entity,System.Int32,System.Int32,System.String)">
	<summary>
 Consulta el valor de una entrada de un catalogo.
 </summary>
	<param name="entity">Objeto con los parametros para realizar la consulta a la tabla</param>
	<param name="idTenant"></param>
	<param name="langId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.ManejadorDominios.CargarEnsamblado(Intelexion.Framework.Extensibility.ExtensionBph)">
	<summary>
 Carga un ensamblado extendidos al Dominio de Aplicación(AppDomain) del Tenant especificado.
 Si el AppDomain no existe éste es creado.
 </summary>
	<param name="extension">ExtensionBph que define el ensamblado que se va a cargar</param>
</member><member name="M:Intelexion.Framework.Extensibility.ManejadorDominios.DescargarDominio(System.Int32)">
	<summary>
 Descarga el dominio de aplicación de un tenant específico
 </summary>
	<param name="idTenant">Identificador del tenant</param>
</member><member name="M:Intelexion.Framework.Extensibility.ManejadorDominios.GetAdaptadorDominio(System.Int32)">
	<summary>
 Devuelve el adaptador de dominio correspondiente a un tenant específico en conjunto con su BPHExtendido
 </summary>
	<param name="idTenant">Tenant del que se desea su el adaptador</param>
	<returns>Ensamblado del BPHExtendido</returns>
</member><member name="M:Intelexion.Framework.Extensibility.BPHControlador.RecuperarPropiedades">
	<summary>
 En el contexto los parametros pueden ser enviados en conjunto: BPH, BPCommand, BPStep
 o unicamente puede ser enviado el idBph
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.BPHDAO.AbrirConexionDatos">
	<summary>
 Abre la conexión con la Base de datos
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.BPHDAO.ConsultarTodos(Intelexion.Framework.Extensibility.EntityBPH)">
	<summary>
 Obtiene todos los registros de BPH almacenados en la Base de datos a través de 
 la ejecución del procedimiento almacenado
 </summary>
	<param name="bph"></param>
	<returns>SqlDataReader conteniendo todos los registros consultados en la Base de datos</returns>
</member><member name="M:Intelexion.Framework.Extensibility.BPHDAO.ConsultaPorIdBph(System.Int32,System.Int32)">
	<summary>
 Obtiene todos los BPHsExtendidos que corresponden a un idBph específico a través de la ejecución
 del procedimiento alm
 acenado.
 </summary>
	<param name="idTenant">Identificador del idTenant a consultar</param>
	<param name="idBph">Identificador del idBph a consultar</param>
	<returns>SqlDataReader conteniendo todos los registros que corresponden al identificador</returns>
</member><member name="M:Intelexion.Framework.Extensibility.CodigosPaginas.CargarCodigosPaginas">
	<summary>
 Carga los codigos JavaScript de todas las paginas de todos los tenants.
 Contemplado para usarse solo una vez al inicio de la aplicación.
 </summary>
</member><member name="M:Intelexion.Framework.Extensibility.CodigosPaginas.CargarCodigosPorPagina(System.String)">
	<summary>
 Carga los codigos JavaScript de paginas de un solo tenant.
 Contemplado para usarse en modo de desarrollo, recargando información que podría estar cambiando.
 </summary>
	<param name="pagina">Pagina actual</param>
</member><member name="M:Intelexion.Framework.Extensibility.CodigosPaginas.CodigoPorPagina(System.String)">
	<summary>
 Busca un codigo JavaScript definido para una pagina para un tenant especifico dentro de la informacion previamente cargada.
 </summary>
	<param name="pagina"></param>
	<returns>Codigos de la pagina</returns>
</member><member name="M:Intelexion.Framework.Utilities.CryptographyHelper.GeneraHashSHA1(System.String)">
	<summary>
 algoritmo SHA-1
 </summary>
	<param name="cadena">(string) cadena a partir del cual se desea obtener el hash</param>
	<returns>(string) cadena hash</returns>
</member><member name="M:Intelexion.Framework.Utilities.CryptographyHelper.GeneraHashMD5(System.String)">
	<summary>
 Función para generar cadenas de string en forma de HashMD5, por medio del
 algoritmo MD5
 </summary>
	<param name="cadena">(string) cadena a partir del cual se desea obtener el HashMD5</param>
	<returns>(string) cadena HashMD5</returns>
</member><member name="M:Intelexion.Framework.Utilities.CryptographyHelper.TextToBase64(System.String)">
	<summary>
 Función codificar en base64 cualquier cadena
 </summary>
	<param name="textValue">(String) Cadena a codificar en base64</param>
	<returns>(String) Cadena codificada</returns>
</member><member name="M:Intelexion.Framework.Utilities.CryptographyHelper.Base64ToText(System.String)">
	<summary>
 Función decodificar cualqueir cadena de base64 a la cadena original
 </summary>
	<param name="base64Value">(String) Cadena a decodificar de base64 la cadena original</param>
	<returns>(String) Cadena original</returns>
</member><member name="T:Intelexion.Framework.Extensibility.BPHPoblar">
	<summary>
 BPH para poblar combos.
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.CargarCamposPersonalizados">
	<summary>
 Carga todos los Campos personalizados en un diccionario. El idTenant es utilizado como llave principal
 para identificarlos
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.CargarCamposPersonalizadosPorPagina(System.String)">
	<summary>
 Carga los Campos personalizados de un tenant específico
 </summary>
	<param name="pagina">Pagina que se va a cargar</param>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.CargarCampoPersonalizadoPorIdCampo(System.Int32,System.Int32)">
	<summary>
 Carga los Campos personalizados de un id de campo específico
 </summary>
	<param name="idCampo"></param>
	<param name="idTenant"></param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.AgregarCampoPersonalizado(Intelexion.Framework.Extensibility.CampoPersonalizado)">
	<summary>
 Agrega un CampoPersonalizado al diccionario de datos
 </summary>
	<param name="campo">campo que se agrega al diccionario</param>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.CamposPorPaginaLenguaje(System.String,System.String)">
	<summary>
 Consulta los campos personalizados para un Tenant y página determinados
 </summary>
	<param name="pagina"></param>
	<param name="langId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.IdTenantsEnDesuso(System.TimeSpan)">
	<summary>
 Lista el id de los tenant que superan un tiempo de uso definido
 </summary>
	<param name="tiempo">Tiempo de uso</param>
	<returns>Lista de enteros de Id</returns>
</member><member name="M:Intelexion.Framework.Extensibility.CamposPersonalizados.DescargarPagina(System.String)">
	<summary>
 Descarga los campos personalizados de la pagina especificado
 </summary>
	<param name="pagina">Identificador de la pagina</param>
</member><member name="M:Intelexion.Framework.Extensibility.PaginaBase.ConfiguraPaginaReporte(System.String)">
	<summary>
 Emula el metodo onInit bajo demanda,
 Se aplica a los casos en que se requere cargar la configuración de una pagina o reprote diferente al
 nombre del archivo fisico aspx que se esta accesando.
 </summary>
	<param name="pagina">Nombre de la pagina o reporte que sustituira a la pagina actual</param>
</member><member name="M:Intelexion.Framework.Extensibility.PaginaBase.CargarCamposPersonalizados">
	<summary>
 Carga todos los Campos Personalizados de una pagina.
 </summary>
</member><member name="M:Intelexion.Framework.Extensibility.PaginaBase.Page_PostLoad">
	<summary>
 Metodo para invocar el codigo posterior al cargado de una pagina
 Dado que no existe un evento correspondiente en el ciclo de vida de las paginas, este metodo debe
 invocarse de manera explicita en aquellas paginas donde se implemente la extensibilidad.
 </summary>
</member><member name="M:Intelexion.Framework.Extensibility.PaginaBase.Page_PostLoad(System.String)">
	<summary>
 Ejecuta el metodo para una pagina diferente a la actual 
 Por ejemplo para un cargado dinamico de paramtros en un reprote, etc
 Metodo para invocar el codigo posterior al cargado de una pagina
 Dado que no existe un evento correspondiente en el ciclo de vida de las paginas, este metodo debe
 invocarse de manera explicita en aquellas paginas donde se implemente la extensibilidad.        ''' 
 </summary>
	<param name="pagina">Nombre de la pagina o reporte que sustituira a la pagina actual</param>
</member><member name="M:Intelexion.Framework.Extensibility.BPHs.CargarBPHsPorIdTenant(System.Int32)">
	<summary>
 Recuperar todos los bphs que son controlados por un idTenant
 </summary>
	<param name="idTenant"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.BPHs.CargarBPHsPorIdBph(System.Int32,System.Int32)">
	<summary>
 Carga los Campos personalizados de un id de campo especifico
 </summary>
	<param name="idTenant"></param>
	<param name="idBph"></param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.EntityDAO.AbrirConexionDatos">
	<summary>
 Abre la conexión con la Base de datos
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.EntityDAO.EjecutarConsultaParaAutocompletar(Intelexion.Framework.Extensibility.Entity)">
	<summary>
 Obtiene todos los registros de la entidad que se desea autocompletar
 </summary>
	<param name="entity">Recibe de parametro un objeto para realizar la consulta a la tabla</param>
	<returns>SqlDataReader conteniendo todos los registros consultados en la Base de datos</returns>
</member><member name="M:Intelexion.Framework.Extensibility.EntityDAO.EjecutarConsultaParaPoblar(Intelexion.Framework.Extensibility.Entity)">
	<summary>
 Obtiene todos los registros de la entidad que se desea poblar
 </summary>
	<param name="entity">Recibe de parametro un objeto para realizar la consulta a la tabla</param>
	<returns>SqlDataReader conteniendo todos los registros consultados en la Base de datos</returns>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionBphDAO.AbrirConexionDatos">
	<summary>
 Abre la conexión con la Base de datos
 </summary>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionBphDAO.ConsultarTodos">
	<summary>
 Obtiene todos los registros de BPHExtendidos almacenados en la Base de datos a través de 
 la ejecución del procedimiento almacenado
 </summary>
	<returns>SqlDataReader conteniendo todos los registros consultados en la Base de datos</returns>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.#ctor">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateCatalogItemCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemDefinitionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemDefinitionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemTypeCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.MoveItemCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.InheritParentSecurityCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListItemHistoryCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListChildrenCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListDependentItemsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.FindItemsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListParentsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateFolderCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemReferencesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemReferencesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListItemTypesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetSubscriptionPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetSubscriptionPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetDataDrivenSubscriptionPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetDataDrivenSubscriptionPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DeleteSubscriptionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateSubscriptionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateDataDrivenSubscriptionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetExtensionSettingsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ValidateExtensionSettingsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListMySubscriptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsUsingDataSourceCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ChangeSubscriptionOwnerCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateDataSourceCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.PrepareQueryCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.EnableDataSourceCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DisableDataSourceCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetDataSourceContentsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetDataSourceContentsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListDatabaseCredentialRetrievalOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemDataSourcesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForDataSourceDefinitionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForItemDataSourceCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateRoleCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetRolePropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetRolePropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DeleteRoleCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListRolesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListTasksCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcePromptsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GenerateModelCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPermissionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetModelItemPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetUserModelCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.InheritModelItemParentSecurityCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetModelDrillthroughReportsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListModelDrillthroughReportsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemChildrenCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemTypesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListModelPerspectivesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.RegenerateModelCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.RemoveAllModelItemPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateScheduleCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DeleteScheduleCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListSchedulesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetSchedulePropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListScheduleStatesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.PauseScheduleCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ResumeScheduleCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetSchedulePropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListScheduledItemsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemParametersCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemParametersCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListParameterTypesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListParameterStatesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateReportEditSessionCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateLinkedItemCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemLinkCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemLinkCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListExecutionSettingsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetExecutionOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetExecutionOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.UpdateItemExecutionSnapshotCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetCacheOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetCacheOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.FlushCacheCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateItemHistorySnapshotCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemHistorySnapshotCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryLimitCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryLimitCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryOptionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetReportServerConfigInfoCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.IsSSLRequiredCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPoliciesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionTypesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListEventsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.FireEventCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListJobsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListJobTypesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListJobActionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListJobStatesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CancelJobCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.CreateCacheRefreshPlanCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.SetCacheRefreshPlanPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetCacheRefreshPlanPropertiesCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.DeleteCacheRefreshPlanCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListCacheRefreshPlansCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.LogonUserCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.LogoffCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetPermissionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPermissionsCompleted">
	<remarks/>
</member><member name="E:Intelexion.Framework.RS2010.ReportingService2010.ListSecurityScopesCompleted">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateCatalogItem(System.String,System.String,System.String,System.Boolean,System.Byte[],Intelexion.Framework.RS2010.Property[],Intelexion.Framework.RS2010.Warning[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateCatalogItemAsync(System.String,System.String,System.String,System.Boolean,System.Byte[],Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateCatalogItemAsync(System.String,System.String,System.String,System.Boolean,System.Byte[],Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemDefinition(System.String,System.Byte[],Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemDefinitionAsync(System.String,System.Byte[],Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemDefinitionAsync(System.String,System.Byte[],Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDefinition(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDefinitionAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDefinitionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemType(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemTypeAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemTypeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteItem(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.MoveItem(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.MoveItemAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.MoveItemAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.InheritParentSecurity(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.InheritParentSecurityAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.InheritParentSecurityAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListItemHistory(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListItemHistoryAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListItemHistoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListChildren(System.String,System.Boolean)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListChildrenAsync(System.String,System.Boolean)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListChildrenAsync(System.String,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListDependentItems(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListDependentItemsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListDependentItemsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FindItems(System.String,Intelexion.Framework.RS2010.BooleanOperatorEnum,Intelexion.Framework.RS2010.Property[],Intelexion.Framework.RS2010.SearchCondition[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FindItemsAsync(System.String,Intelexion.Framework.RS2010.BooleanOperatorEnum,Intelexion.Framework.RS2010.Property[],Intelexion.Framework.RS2010.SearchCondition[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FindItemsAsync(System.String,Intelexion.Framework.RS2010.BooleanOperatorEnum,Intelexion.Framework.RS2010.Property[],Intelexion.Framework.RS2010.SearchCondition[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParents(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParentsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParentsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateFolder(System.String,System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateFolderAsync(System.String,System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateFolderAsync(System.String,System.String,Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetProperties(System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetPropertiesAsync(System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetPropertiesAsync(System.String,Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetProperties(System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPropertiesAsync(System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPropertiesAsync(System.String,Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemReferences(System.String,Intelexion.Framework.RS2010.ItemReference[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemReferencesAsync(System.String,Intelexion.Framework.RS2010.ItemReference[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemReferencesAsync(System.String,Intelexion.Framework.RS2010.ItemReference[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemReferences(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemReferencesAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemReferencesAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListItemTypes">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListItemTypesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListItemTypesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSubscriptionProperties(System.String,Intelexion.Framework.RS2010.ExtensionSettings,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSubscriptionPropertiesAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSubscriptionPropertiesAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSubscriptionProperties(System.String,Intelexion.Framework.RS2010.ExtensionSettings@,System.String@,Intelexion.Framework.RS2010.ActiveState@,System.String@,System.String@,System.String@,Intelexion.Framework.RS2010.ParameterValue[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSubscriptionPropertiesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSubscriptionPropertiesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetDataDrivenSubscriptionProperties(System.String,Intelexion.Framework.RS2010.ExtensionSettings,Intelexion.Framework.RS2010.DataRetrievalPlan,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetDataDrivenSubscriptionPropertiesAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,Intelexion.Framework.RS2010.DataRetrievalPlan,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetDataDrivenSubscriptionPropertiesAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,Intelexion.Framework.RS2010.DataRetrievalPlan,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetDataDrivenSubscriptionProperties(System.String,Intelexion.Framework.RS2010.ExtensionSettings@,Intelexion.Framework.RS2010.DataRetrievalPlan@,System.String@,Intelexion.Framework.RS2010.ActiveState@,System.String@,System.String@,System.String@,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetDataDrivenSubscriptionPropertiesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetDataDrivenSubscriptionPropertiesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteSubscription(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteSubscriptionAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteSubscriptionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateSubscription(System.String,Intelexion.Framework.RS2010.ExtensionSettings,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateSubscriptionAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateSubscriptionAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateDataDrivenSubscription(System.String,Intelexion.Framework.RS2010.ExtensionSettings,Intelexion.Framework.RS2010.DataRetrievalPlan,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateDataDrivenSubscriptionAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,Intelexion.Framework.RS2010.DataRetrievalPlan,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateDataDrivenSubscriptionAsync(System.String,Intelexion.Framework.RS2010.ExtensionSettings,Intelexion.Framework.RS2010.DataRetrievalPlan,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetExtensionSettings(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetExtensionSettingsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetExtensionSettingsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ValidateExtensionSettings(System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[],System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ValidateExtensionSettingsAsync(System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[],System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ValidateExtensionSettingsAsync(System.String,Intelexion.Framework.RS2010.ParameterValueOrFieldReference[],System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptions(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListMySubscriptions(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListMySubscriptionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListMySubscriptionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsUsingDataSource(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsUsingDataSourceAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSubscriptionsUsingDataSourceAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ChangeSubscriptionOwner(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ChangeSubscriptionOwnerAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ChangeSubscriptionOwnerAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateDataSource(System.String,System.String,System.Boolean,Intelexion.Framework.RS2010.DataSourceDefinition,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateDataSourceAsync(System.String,System.String,System.Boolean,Intelexion.Framework.RS2010.DataSourceDefinition,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateDataSourceAsync(System.String,System.String,System.Boolean,Intelexion.Framework.RS2010.DataSourceDefinition,Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.PrepareQuery(Intelexion.Framework.RS2010.DataSource,Intelexion.Framework.RS2010.DataSetDefinition,System.Boolean@,System.String[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.PrepareQueryAsync(Intelexion.Framework.RS2010.DataSource,Intelexion.Framework.RS2010.DataSetDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.PrepareQueryAsync(Intelexion.Framework.RS2010.DataSource,Intelexion.Framework.RS2010.DataSetDefinition,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.EnableDataSource(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.EnableDataSourceAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.EnableDataSourceAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DisableDataSource(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DisableDataSourceAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DisableDataSourceAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetDataSourceContents(System.String,Intelexion.Framework.RS2010.DataSourceDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetDataSourceContentsAsync(System.String,Intelexion.Framework.RS2010.DataSourceDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetDataSourceContentsAsync(System.String,Intelexion.Framework.RS2010.DataSourceDefinition,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetDataSourceContents(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetDataSourceContentsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetDataSourceContentsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListDatabaseCredentialRetrievalOptions">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListDatabaseCredentialRetrievalOptionsAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListDatabaseCredentialRetrievalOptionsAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemDataSources(System.String,Intelexion.Framework.RS2010.DataSource[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemDataSourcesAsync(System.String,Intelexion.Framework.RS2010.DataSource[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemDataSourcesAsync(System.String,Intelexion.Framework.RS2010.DataSource[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSources(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForDataSourceDefinition(Intelexion.Framework.RS2010.DataSourceDefinition,System.String,System.String,System.String@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForDataSourceDefinitionAsync(Intelexion.Framework.RS2010.DataSourceDefinition,System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForDataSourceDefinitionAsync(Intelexion.Framework.RS2010.DataSourceDefinition,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForItemDataSource(System.String,System.String,System.String,System.String,System.String@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForItemDataSourceAsync(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.TestConnectForItemDataSourceAsync(System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateRole(System.String,System.String,System.String[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateRoleAsync(System.String,System.String,System.String[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateRoleAsync(System.String,System.String,System.String[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetRoleProperties(System.String,System.String,System.String[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetRolePropertiesAsync(System.String,System.String,System.String[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetRolePropertiesAsync(System.String,System.String,System.String[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetRoleProperties(System.String,System.String,System.String@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetRolePropertiesAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetRolePropertiesAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteRole(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteRoleAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteRoleAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListRoles(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListRolesAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListRolesAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListTasks(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListTasksAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListTasksAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetPolicies(System.String,Intelexion.Framework.RS2010.Policy[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetPoliciesAsync(System.String,Intelexion.Framework.RS2010.Policy[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetPoliciesAsync(System.String,Intelexion.Framework.RS2010.Policy[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPolicies(System.String,System.Boolean@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPoliciesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPoliciesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcePrompts(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcePromptsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemDataSourcePromptsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GenerateModel(System.String,System.String,System.String,Intelexion.Framework.RS2010.Property[],Intelexion.Framework.RS2010.Warning[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GenerateModelAsync(System.String,System.String,System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GenerateModelAsync(System.String,System.String,System.String,Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPermissions(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPermissionsAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPermissionsAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetModelItemPolicies(System.String,System.String,Intelexion.Framework.RS2010.Policy[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetModelItemPoliciesAsync(System.String,System.String,Intelexion.Framework.RS2010.Policy[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetModelItemPoliciesAsync(System.String,System.String,Intelexion.Framework.RS2010.Policy[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPolicies(System.String,System.String,System.Boolean@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPoliciesAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetModelItemPoliciesAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetUserModel(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetUserModelAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetUserModelAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.InheritModelItemParentSecurity(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.InheritModelItemParentSecurityAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.InheritModelItemParentSecurityAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetModelDrillthroughReports(System.String,System.String,Intelexion.Framework.RS2010.ModelDrillthroughReport[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetModelDrillthroughReportsAsync(System.String,System.String,Intelexion.Framework.RS2010.ModelDrillthroughReport[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetModelDrillthroughReportsAsync(System.String,System.String,Intelexion.Framework.RS2010.ModelDrillthroughReport[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelDrillthroughReports(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelDrillthroughReportsAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelDrillthroughReportsAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemChildren(System.String,System.String,System.Boolean)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemChildrenAsync(System.String,System.String,System.Boolean)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemChildrenAsync(System.String,System.String,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemTypes">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemTypesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelItemTypesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelPerspectives(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelPerspectivesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListModelPerspectivesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.RegenerateModel(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.RegenerateModelAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.RegenerateModelAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.RemoveAllModelItemPolicies(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.RemoveAllModelItemPoliciesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.RemoveAllModelItemPoliciesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateSchedule(System.String,Intelexion.Framework.RS2010.ScheduleDefinition,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateScheduleAsync(System.String,Intelexion.Framework.RS2010.ScheduleDefinition,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateScheduleAsync(System.String,Intelexion.Framework.RS2010.ScheduleDefinition,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteSchedule(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteScheduleAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteScheduleAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSchedules(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSchedulesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSchedulesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetScheduleProperties(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSchedulePropertiesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSchedulePropertiesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListScheduleStates">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListScheduleStatesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListScheduleStatesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.PauseSchedule(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.PauseScheduleAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.PauseScheduleAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ResumeSchedule(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ResumeScheduleAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ResumeScheduleAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetScheduleProperties(System.String,System.String,Intelexion.Framework.RS2010.ScheduleDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSchedulePropertiesAsync(System.String,System.String,Intelexion.Framework.RS2010.ScheduleDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSchedulePropertiesAsync(System.String,System.String,Intelexion.Framework.RS2010.ScheduleDefinition,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListScheduledItems(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListScheduledItemsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListScheduledItemsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemParameters(System.String,Intelexion.Framework.RS2010.ItemParameter[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemParametersAsync(System.String,Intelexion.Framework.RS2010.ItemParameter[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemParametersAsync(System.String,Intelexion.Framework.RS2010.ItemParameter[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemParameters(System.String,System.String,System.Boolean,Intelexion.Framework.RS2010.ParameterValue[],Intelexion.Framework.RS2010.DataSourceCredentials[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemParametersAsync(System.String,System.String,System.Boolean,Intelexion.Framework.RS2010.ParameterValue[],Intelexion.Framework.RS2010.DataSourceCredentials[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemParametersAsync(System.String,System.String,System.Boolean,Intelexion.Framework.RS2010.ParameterValue[],Intelexion.Framework.RS2010.DataSourceCredentials[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParameterTypes">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParameterTypesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParameterTypesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParameterStates">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParameterStatesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListParameterStatesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateReportEditSession(System.String,System.String,System.Byte[],Intelexion.Framework.RS2010.Warning[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateReportEditSessionAsync(System.String,System.String,System.Byte[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateReportEditSessionAsync(System.String,System.String,System.Byte[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateLinkedItem(System.String,System.String,System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateLinkedItemAsync(System.String,System.String,System.String,Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateLinkedItemAsync(System.String,System.String,System.String,Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemLink(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemLinkAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemLinkAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemLink(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemLinkAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemLinkAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExecutionSettings">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExecutionSettingsAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExecutionSettingsAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetExecutionOptions(System.String,System.String,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetExecutionOptionsAsync(System.String,System.String,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetExecutionOptionsAsync(System.String,System.String,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetExecutionOptions(System.String,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetExecutionOptionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetExecutionOptionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.UpdateItemExecutionSnapshot(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.UpdateItemExecutionSnapshotAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.UpdateItemExecutionSnapshotAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetCacheOptions(System.String,System.Boolean,Intelexion.Framework.RS2010.ExpirationDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetCacheOptionsAsync(System.String,System.Boolean,Intelexion.Framework.RS2010.ExpirationDefinition)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetCacheOptionsAsync(System.String,System.Boolean,Intelexion.Framework.RS2010.ExpirationDefinition,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetCacheOptions(System.String,Intelexion.Framework.RS2010.ExpirationDefinition@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetCacheOptionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetCacheOptionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FlushCache(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FlushCacheAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FlushCacheAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateItemHistorySnapshot(System.String,Intelexion.Framework.RS2010.Warning[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateItemHistorySnapshotAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateItemHistorySnapshotAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemHistorySnapshot(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemHistorySnapshotAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteItemHistorySnapshotAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryLimit(System.String,System.Boolean,System.Int32)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryLimitAsync(System.String,System.Boolean,System.Int32)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryLimitAsync(System.String,System.Boolean,System.Int32,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryLimit(System.String,System.Boolean@,System.Int32@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryLimitAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryLimitAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryOptions(System.String,System.Boolean,System.Boolean,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetItemHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryOptions(System.String,System.Boolean@,Intelexion.Framework.RS2010.ScheduleDefinitionOrReference@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryOptionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetItemHistoryOptionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetReportServerConfigInfo(System.Boolean)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetReportServerConfigInfoAsync(System.Boolean)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetReportServerConfigInfoAsync(System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.IsSSLRequired">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.IsSSLRequiredAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.IsSSLRequiredAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSystemProperties(Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPropertiesAsync(Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPropertiesAsync(Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemProperties(Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPropertiesAsync(Intelexion.Framework.RS2010.Property[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPropertiesAsync(Intelexion.Framework.RS2010.Property[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPolicies(Intelexion.Framework.RS2010.Policy[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPoliciesAsync(Intelexion.Framework.RS2010.Policy[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetSystemPoliciesAsync(Intelexion.Framework.RS2010.Policy[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPolicies">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPoliciesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPoliciesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExtensions(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionTypes">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionTypesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListExtensionTypesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListEvents">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListEventsAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListEventsAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FireEvent(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FireEventAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.FireEventAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobs">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobsAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobsAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobTypes">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobTypesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobTypesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobActions">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobActionsAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobActionsAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobStates">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobStatesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListJobStatesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CancelJob(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CancelJobAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CancelJobAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateCacheRefreshPlan(System.String,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateCacheRefreshPlanAsync(System.String,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CreateCacheRefreshPlanAsync(System.String,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetCacheRefreshPlanProperties(System.String,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetCacheRefreshPlanPropertiesAsync(System.String,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[])">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.SetCacheRefreshPlanPropertiesAsync(System.String,System.String,System.String,System.String,Intelexion.Framework.RS2010.ParameterValue[],System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetCacheRefreshPlanProperties(System.String,System.String@,Intelexion.Framework.RS2010.CacheRefreshPlanState@,System.String@,System.String@,Intelexion.Framework.RS2010.ParameterValue[]@)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetCacheRefreshPlanPropertiesAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetCacheRefreshPlanPropertiesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteCacheRefreshPlan(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteCacheRefreshPlanAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.DeleteCacheRefreshPlanAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListCacheRefreshPlans(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListCacheRefreshPlansAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListCacheRefreshPlansAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.LogonUser(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.LogonUserAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.LogonUserAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.Logoff">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.LogoffAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.LogoffAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPermissions(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPermissionsAsync(System.String)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetPermissionsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPermissions">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPermissionsAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.GetSystemPermissionsAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSecurityScopes">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSecurityScopesAsync">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.ListSecurityScopesAsync(System.Object)">
	<remarks/>
</member><member name="M:Intelexion.Framework.RS2010.ReportingService2010.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ReportingService2010">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ServerInfoHeader.ReportServerVersionNumber">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ServerInfoHeader.ReportServerEdition">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ServerInfoHeader.ReportServerVersion">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ServerInfoHeader.ReportServerDateTime">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ServerInfoHeader.ReportServerTimeZoneInfo">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ServerInfoHeader.AnyAttr">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ServerInfoHeader">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TimeZoneInformation.Bias">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TimeZoneInformation.StandardBias">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TimeZoneInformation.StandardDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TimeZoneInformation.DaylightBias">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TimeZoneInformation.DaylightDate">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TimeZoneInformation">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.year">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.month">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.dayOfWeek">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.day">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.hour">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.minute">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.second">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SYSTEMTIME.milliseconds">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SYSTEMTIME">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.CacheRefreshPlanID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.ItemPath">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.State">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.LastExecuted">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.ModifiedDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.ModifiedBy">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlan.LastRunStatus">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CacheRefreshPlan">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlanState.MissingParameterValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlanState.InvalidParameterValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlanState.UnknownItemParameter">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CacheRefreshPlanState.CachingNotEnabledOnItem">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CacheRefreshPlanState">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.JobID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.Path">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.Machine">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.User">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.StartDateTime">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.JobActionName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.JobTypeName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Job.JobStatusName">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Job">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Event.Type">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Event">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Extension.ExtensionTypeName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Extension.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Extension.LocalizedName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Extension.Visible">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Extension.IsModelGenerationSupported">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Extension">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ExpirationDefinition">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleExpiration.Item">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ScheduleExpiration">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleDefinition.StartDateTime">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleDefinition.EndDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleDefinition.EndDateSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleDefinition.Item">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ScheduleDefinition">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DailyRecurrence.DaysInterval">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DailyRecurrence">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.RecurrencePattern">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MinuteRecurrence.MinutesInterval">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.MinuteRecurrence">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.WeeklyRecurrence.WeeksInterval">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.WeeklyRecurrence.WeeksIntervalSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.WeeklyRecurrence.DaysOfWeek">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.WeeklyRecurrence">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Sunday">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Monday">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Tuesday">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Wednesday">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Thursday">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Friday">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DaysOfWeekSelector.Saturday">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DaysOfWeekSelector">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthlyDOWRecurrence.WhichWeek">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthlyDOWRecurrence.WhichWeekSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthlyDOWRecurrence.DaysOfWeek">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthlyDOWRecurrence.MonthsOfYear">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.MonthlyDOWRecurrence">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.WeekNumberEnum.FirstWeek">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.WeekNumberEnum.SecondWeek">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.WeekNumberEnum.ThirdWeek">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.WeekNumberEnum.FourthWeek">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.WeekNumberEnum.LastWeek">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.WeekNumberEnum">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.January">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.February">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.March">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.April">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.May">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.June">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.July">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.August">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.September">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.October">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.November">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthsOfYearSelector.December">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.MonthsOfYearSelector">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthlyRecurrence.Days">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.MonthlyRecurrence.MonthsOfYear">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.MonthlyRecurrence">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ScheduleDefinitionOrReference">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleReference.ScheduleID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ScheduleReference.Definition">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ScheduleReference">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.NoSchedule">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TimeExpiration.Minutes">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TimeExpiration">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceCredentials.DataSourceName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceCredentials.UserName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceCredentials.Password">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSourceCredentials">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.ParameterTypeName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.Nullable">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.NullableSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.AllowBlank">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.AllowBlankSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.MultiValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.MultiValueSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.QueryParameter">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.QueryParameterSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.Prompt">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.PromptUser">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.PromptUserSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.Dependencies">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.ValidValuesQueryBased">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.ValidValuesQueryBasedSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.ValidValues">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.DefaultValuesQueryBased">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.DefaultValuesQueryBasedSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.DefaultValues">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.ParameterStateName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemParameter.ErrorMessage">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ItemParameter">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ValidValue.Label">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ValidValue.Value">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ValidValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.ScheduleID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.Definition">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.Creator">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.NextRunTime">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.NextRunTimeSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.LastRunTime">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.LastRunTimeSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.ReferencesPresent">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Schedule.ScheduleStateName">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Schedule">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelPerspective.ID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelPerspective.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelPerspective.Description">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ModelPerspective">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelCatalogItem.Model">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelCatalogItem.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelCatalogItem.Perspectives">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ModelCatalogItem">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelItem.ID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelItem.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelItem.ModelItemTypeName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelItem.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelItem.ModelItems">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ModelItem">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelDrillthroughReport.Path">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ModelDrillthroughReport.Type">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ModelDrillthroughReport">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.DrillthroughType.Detail">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.DrillthroughType.List">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DrillthroughType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourcePrompt.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourcePrompt.DataSourceID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourcePrompt.Prompt">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSourcePrompt">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Policy.GroupUserName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Policy.Roles">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Policy">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Role.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Role.Description">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Role">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Task.TaskID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Task.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Task.Description">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Task">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSource.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSource.Item">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSource">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.Extension">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.ConnectString">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.UseOriginalConnectString">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.OriginalConnectStringExpressionBased">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.CredentialRetrieval">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.WindowsCredentials">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.ImpersonateUser">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.ImpersonateUserSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.Prompt">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.UserName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.Password">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.Enabled">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceDefinition.EnabledSpecified">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSourceDefinition">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.CredentialRetrievalEnum.Prompt">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.CredentialRetrievalEnum.Store">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.CredentialRetrievalEnum.Integrated">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.CredentialRetrievalEnum.None">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CredentialRetrievalEnum">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSourceDefinitionOrReference">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSourceReference.Reference">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSourceReference">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.InvalidDataSourceReference">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.SubscriptionID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.Owner">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.Path">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.VirtualPath">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.Report">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.DeliverySettings">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.Status">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.Active">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.LastExecuted">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.LastExecutedSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.ModifiedBy">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.ModifiedDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.EventType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Subscription.IsDataDriven">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Subscription">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionSettings.Extension">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionSettings.ParameterValues">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ExtensionSettings">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ParameterFieldReference.ParameterName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ParameterFieldReference.FieldAlias">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ParameterFieldReference">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ParameterValueOrFieldReference">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ParameterValue.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ParameterValue.Value">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ParameterValue.Label">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ParameterValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.DeliveryExtensionRemoved">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.DeliveryExtensionRemovedSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.SharedDataSourceRemoved">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.SharedDataSourceRemovedSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.MissingParameterValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.MissingParameterValueSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.InvalidParameterValue">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.InvalidParameterValueSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.UnknownReportParameter">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ActiveState.UnknownReportParameterSpecified">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ActiveState">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.DisplayName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.Required">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.RequiredSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.ReadOnly">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.Value">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.Error">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.Encrypted">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.IsPassword">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ExtensionParameter.ValidValues">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ExtensionParameter">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.QueryDefinition.CommandType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.QueryDefinition.CommandText">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.QueryDefinition.Timeout">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.QueryDefinition.TimeoutSpecified">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.QueryDefinition">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Field.Alias">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Field.Name">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Field">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.Fields">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.Query">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.CaseSensitivity">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.CaseSensitivitySpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.Collation">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.AccentSensitivity">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.AccentSensitivitySpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.KanatypeSensitivity">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.KanatypeSensitivitySpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.WidthSensitivity">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.WidthSensitivitySpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataSetDefinition.Name">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataSetDefinition">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.SensitivityEnum.True">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.SensitivityEnum.False">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.SensitivityEnum.Auto">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SensitivityEnum">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataRetrievalPlan.Item">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.DataRetrievalPlan.DataSet">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DataRetrievalPlan">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemReferenceData.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemReferenceData.Reference">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemReferenceData.ReferenceType">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ItemReferenceData">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemReference.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemReference.Reference">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ItemReference">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SearchCondition.Condition">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SearchCondition.ConditionSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SearchCondition.Values">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SearchCondition.Name">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SearchCondition">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.ConditionEnum.Contains">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.ConditionEnum.Equals">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.ConditionEnum.In">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.ConditionEnum.Between">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ConditionEnum">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemHistorySnapshot.HistoryID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemHistorySnapshot.CreationDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemHistorySnapshot.Size">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ItemHistorySnapshot">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Warning.Code">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Warning.Severity">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Warning.ObjectName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Warning.ObjectType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Warning.Message">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Warning">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.ID">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.Path">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.VirtualPath">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.TypeName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.Size">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.SizeSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.Hidden">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.HiddenSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.CreationDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.CreationDateSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.ModifiedDate">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.ModifiedDateSpecified">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.CreatedBy">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.ModifiedBy">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CatalogItem.ItemMetadata">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CatalogItem">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Property.Name">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.Property.Value">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.Property">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TrustedUserHeader.UserName">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TrustedUserHeader.UserToken">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TrustedUserHeader.AnyAttr">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TrustedUserHeader">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemNamespaceHeader.ItemNamespace">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ItemNamespaceHeader.AnyAttr">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ItemNamespaceHeader">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.ItemNamespaceEnum.PathBased">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.ItemNamespaceEnum.GUIDBased">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ItemNamespaceEnum">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.BooleanOperatorEnum.And">
	<remarks/>
</member><member name="F:Intelexion.Framework.RS2010.BooleanOperatorEnum.Or">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.BooleanOperatorEnum">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateCatalogItemCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateCatalogItemCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateCatalogItemCompletedEventArgs.Warnings">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateCatalogItemCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemDefinitionCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.SetItemDefinitionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemDefinitionCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemDefinitionCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemDefinitionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemDefinitionCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemTypeCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemTypeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemTypeCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DeleteItemCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.MoveItemCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.InheritParentSecurityCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListItemHistoryCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListItemHistoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListItemHistoryCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListChildrenCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListChildrenCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListChildrenCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListDependentItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListDependentItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListDependentItemsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.FindItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.FindItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.FindItemsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListParentsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListParentsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListParentsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateFolderCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateFolderCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateFolderCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetPropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetPropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemReferencesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemReferencesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemReferencesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemReferencesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListItemTypesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListItemTypesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListItemTypesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetSubscriptionPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.Active">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.Status">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.EventType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.MatchData">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs.Parameters">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSubscriptionPropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetDataDrivenSubscriptionPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.DataRetrievalPlan">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Description">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Active">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Status">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.EventType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.MatchData">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Parameters">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetDataDrivenSubscriptionPropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DeleteSubscriptionCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateSubscriptionCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateSubscriptionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateSubscriptionCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateDataDrivenSubscriptionCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateDataDrivenSubscriptionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateDataDrivenSubscriptionCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetExtensionSettingsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetExtensionSettingsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetExtensionSettingsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ValidateExtensionSettingsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ValidateExtensionSettingsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ValidateExtensionSettingsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSubscriptionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListSubscriptionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSubscriptionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListMySubscriptionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListMySubscriptionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListMySubscriptionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSubscriptionsUsingDataSourceCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListSubscriptionsUsingDataSourceCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSubscriptionsUsingDataSourceCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ChangeSubscriptionOwnerCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateDataSourceCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateDataSourceCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateDataSourceCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.PrepareQueryCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.PrepareQueryCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.PrepareQueryCompletedEventArgs.Changed">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.PrepareQueryCompletedEventArgs.ParameterNames">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.PrepareQueryCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.EnableDataSourceCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DisableDataSourceCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetDataSourceContentsCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetDataSourceContentsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetDataSourceContentsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetDataSourceContentsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListDatabaseCredentialRetrievalOptionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListDatabaseCredentialRetrievalOptionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListDatabaseCredentialRetrievalOptionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemDataSourcesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemDataSourcesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemDataSourcesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemDataSourcesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TestConnectForDataSourceDefinitionCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TestConnectForDataSourceDefinitionCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TestConnectForDataSourceDefinitionCompletedEventArgs.ConnectError">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TestConnectForDataSourceDefinitionCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TestConnectForItemDataSourceCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TestConnectForItemDataSourceCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.TestConnectForItemDataSourceCompletedEventArgs.ConnectError">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.TestConnectForItemDataSourceCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateRoleCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetRolePropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetRolePropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetRolePropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetRolePropertiesCompletedEventArgs.Description">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetRolePropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DeleteRoleCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListRolesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListRolesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListRolesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListTasksCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListTasksCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListTasksCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetPoliciesCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetPoliciesCompletedEventArgs.InheritParent">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetPoliciesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemDataSourcePromptsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemDataSourcePromptsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemDataSourcePromptsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GenerateModelCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GenerateModelCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GenerateModelCompletedEventArgs.Warnings">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GenerateModelCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetModelItemPermissionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetModelItemPermissionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetModelItemPermissionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetModelItemPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetModelItemPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetModelItemPoliciesCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetModelItemPoliciesCompletedEventArgs.InheritParent">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetModelItemPoliciesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetUserModelCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetUserModelCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetUserModelCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.InheritModelItemParentSecurityCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetModelDrillthroughReportsCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelDrillthroughReportsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListModelDrillthroughReportsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelDrillthroughReportsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelItemChildrenCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListModelItemChildrenCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelItemChildrenCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelItemTypesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListModelItemTypesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelItemTypesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelPerspectivesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListModelPerspectivesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListModelPerspectivesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.RegenerateModelCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.RegenerateModelCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.RegenerateModelCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.RemoveAllModelItemPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateScheduleCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateScheduleCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateScheduleCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DeleteScheduleCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSchedulesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListSchedulesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSchedulesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSchedulePropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSchedulePropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSchedulePropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListScheduleStatesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListScheduleStatesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListScheduleStatesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.PauseScheduleCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ResumeScheduleCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetSchedulePropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListScheduledItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListScheduledItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListScheduledItemsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemParametersCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemParametersCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemParametersCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemParametersCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListParameterTypesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListParameterTypesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListParameterTypesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListParameterStatesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListParameterStatesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListParameterStatesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateReportEditSessionCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateReportEditSessionCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateReportEditSessionCompletedEventArgs.Warnings">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateReportEditSessionCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateLinkedItemCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemLinkCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemLinkCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemLinkCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemLinkCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListExecutionSettingsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListExecutionSettingsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListExecutionSettingsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetExecutionOptionsCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetExecutionOptionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetExecutionOptionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetExecutionOptionsCompletedEventArgs.Item">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetExecutionOptionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.UpdateItemExecutionSnapshotCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetCacheOptionsCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetCacheOptionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheOptionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheOptionsCompletedEventArgs.Item">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetCacheOptionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.FlushCacheCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateItemHistorySnapshotCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateItemHistorySnapshotCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateItemHistorySnapshotCompletedEventArgs.Warnings">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateItemHistorySnapshotCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DeleteItemHistorySnapshotCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemHistoryLimitCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemHistoryLimitCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemHistoryLimitCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemHistoryLimitCompletedEventArgs.IsSystem">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemHistoryLimitCompletedEventArgs.SystemLimit">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemHistoryLimitCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetItemHistoryOptionsCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemHistoryOptionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemHistoryOptionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemHistoryOptionsCompletedEventArgs.KeepExecutionSnapshots">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetItemHistoryOptionsCompletedEventArgs.Item">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetItemHistoryOptionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetReportServerConfigInfoCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetReportServerConfigInfoCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetReportServerConfigInfoCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.IsSSLRequiredCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.IsSSLRequiredCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.IsSSLRequiredCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetSystemPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSystemPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSystemPropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSystemPropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetSystemPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSystemPoliciesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSystemPoliciesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSystemPoliciesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListExtensionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListExtensionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListExtensionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListExtensionTypesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListExtensionTypesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListExtensionTypesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListEventsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListEventsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListEventsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.FireEventCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListJobsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobTypesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListJobTypesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobTypesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobActionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListJobActionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobActionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobStatesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListJobStatesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListJobStatesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CancelJobCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CancelJobCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CancelJobCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateCacheRefreshPlanCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.CreateCacheRefreshPlanCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.CreateCacheRefreshPlanCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.SetCacheRefreshPlanPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs.LastRunStatus">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs.State">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs.EventType">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs.MatchData">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs.Parameters">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetCacheRefreshPlanPropertiesCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.DeleteCacheRefreshPlanCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListCacheRefreshPlansCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListCacheRefreshPlansCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListCacheRefreshPlansCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.LogonUserCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.LogoffCompletedEventHandler">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetPermissionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetPermissionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetPermissionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSystemPermissionsCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.GetSystemPermissionsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.GetSystemPermissionsCompletedEventArgs">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSecurityScopesCompletedEventHandler">
	<remarks/>
</member><member name="P:Intelexion.Framework.RS2010.ListSecurityScopesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Intelexion.Framework.RS2010.ListSecurityScopesCompletedEventArgs">
	<remarks/>
</member><member name="M:Intelexion.Framework.Extensibility.EnsambladosExtendidos.CargarEnsamblado(System.Int32,Intelexion.Framework.Extensibility.ExtensionBph)">
	<summary>
 Carga todos los ensamblados extendidos a memoria. El idTenant es utilizado como llave principal
 para identificar los ensamblados.
 </summary>
	<param name="idTenant">Identificador del Tenant</param>
	<param name="bph">BPHExtendido que posee el ensamblado que se va a cargar</param>
</member><member name="M:Intelexion.Framework.Extensibility.EnsambladosExtendidos.DescargarEnsamblados(System.Int32)">
	<summary>
 Descarga todos los ensamblados extendidos de memoria correspondientes a un tenant específico
 </summary>
	<param name="idTenant">Identificador del tenant</param>
</member><member name="M:Intelexion.Framework.Extensibility.EnsambladosExtendidos.GetEnsamblado(System.Int32,Intelexion.Framework.Extensibility.ExtensionBph)">
	<summary>
 Devuelve el ensamblado extendido correspondiente a un tenant específico y su BPHExtendido
 </summary>
	<param name="idTenant">Identificador del tenant</param>
	<param name="bph">BPHExtendido del que se desea su ensamblado</param>
	<returns>Ensamblado del BPHExtendido</returns>
</member><member name="M:Intelexion.Framework.Extensibility.EnsambladosExtendidos.TiemposAcceso(System.TimeSpan)">
	<summary>
 Lista el idtenant de los ensamblados que superan un tiempo de uso definido
 </summary>
	<param name="tiempo">Tiempo de uso</param>
	<returns>Lista de enteros de Id</returns>
</member><member name="M:Intelexion.Framework.Extensibility.EnsambladosExtendidos.CargarArchivoEnsamblado(Intelexion.Framework.Extensibility.ExtensionBph)">
	<summary>
 Carga el ensamblado del Disco a memoria
 </summary>
	<param name="extension">ExtensionBph con el nombre del ensamblado a cargar</param>
	<returns>Ensamblado</returns>
</member><member name="F:Intelexion.Framework.SerializationMethod.Shallow">
	<summary>
 Serialize public members
 </summary>
	<remarks></remarks>
</member><member name="F:Intelexion.Framework.SerializationMethod.Deep">
	<summary>
 Serialize private, friend, and public members
 </summary>
	<remarks></remarks>
</member><member name="T:Intelexion.Framework.SerializationMethod">
	<summary>
 Defines how to serialize class members (fields and properties)
 </summary>
	<remarks>
	</remarks>
</member><member name="P:Intelexion.Framework.CustomXmlSerializer.CDataStorage">
	<summary>
 Serialize string values into xml CData tags.
 </summary>
	<value>True to enable CData serialization, False to disable and store as string.</value>
	<returns>Boolean value identifing property state.</returns>
	<remarks>When enabled strings and enumerators are stored in CData tags.</remarks>
</member><member name="P:Intelexion.Framework.CustomXmlSerializer.IgnoreWarnings">
	<summary>
 Ignore warnings and allow operation to continue.
 </summary>
	<value>True to ignore warning errors, False to throw warning errors.</value>
	<returns>Boolean value identifing property state.</returns>
	<remarks>Use with caution as deserialization can load objects with incomplete data.</remarks>
</member><member name="P:Intelexion.Framework.CustomXmlSerializer.IncludeClassNameAttribute">
	<summary>
 Record the name of the class when serializing to ensure that the
 class can be deserialized.
 </summary>
	<value>True to include the className, False to exclude it.</value>
	<returns>The state of the property.</returns>
	<remarks></remarks>
</member><member name="P:Intelexion.Framework.CustomXmlSerializer.Method">
	<summary>
 Identifies how the class should be serialized.
 </summary>
	<value>Shallow to serialize public fields and properties. Deep to serialize private, friend, and public fields and properties.</value>
	<returns>The state of the property.</returns>
	<remarks></remarks>
</member><member name="P:Intelexion.Framework.CustomXmlSerializer.BindingCriteria">
	<summary>
 Defines the Reflection BindingFlags required to support the selected SerializationMethod.
 </summary>
	<returns>The state of the property.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadXml(System.Xml.XmlReader,System.Object)">
	<summary>
 Deserialize Xml into the target object.
 </summary>
	<param name="reader">The source of the Xml to load.</param>
	<param name="target">The destination for the Xml.</param>
	<remarks>
 The target must be passed in ByVal and returned to support data type variable serialization.
 </remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadXml(System.Xml.XmlNode,System.Object)">
	<summary>
 Deserialize Xml into the target object.
 </summary>
	<param name="node">The Xml to load into the object.</param>
	<param name="target">The destination for the Xml.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadXml(System.Xml.XmlDocument,System.Object)">
	<summary>
 Deserialize Xml into the target object.
 </summary>
	<param name="document">The Xml to load into the object.</param>
	<param name="target">The destination for the Xml.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadXml(System.String,System.Object)">
	<summary>
 Deserialize Xml into the target object.
 </summary>
	<param name="path">A path to the file with the Xml to load into the object.</param>
	<param name="target">The destination for the Xml.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadXml(System.Text.StringBuilder,System.Object)">
	<summary>
 Deserialize Xml into the target object.
 </summary>
	<param name="text">The Xml to load into the object.</param>
	<param name="target">The destination for the Xml.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteDocument(System.Object)">
	<summary>
 Serialize the source object into an XmlDocument following "Shallow Copy" business logic.
 </summary>
	<param name="source">The object to serialize.</param>
	<returns>The serialized object.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteFile(System.Object,System.String,System.Boolean)">
	<summary>
 Serialize the source object into a file following "Shallow Copy" business logic.
 </summary>
	<param name="source">The object to serialize.</param>
	<param name="path">The file to save the Xml into.</param>
	<param name="replaceFile">
 If true the file is deleted before the contents are saved.
 If false and the file exists serialization is terminated.
 </param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteString(System.Object)">
	<summary>
 Serialize the source object into a string following "Shallow Copy" business logic.
 </summary>
	<param name="source">The object to serialize.</param>
	<returns>The serialized object.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteText(System.Object)">
	<summary>
 Serialize the source object into an StringBuilder following "Shallow Copy" business logic.
 </summary>
	<param name="source">The object to serialize.</param>
	<returns>The serialized object.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteXml(System.Object,System.Xml.XmlWriter,System.String)">
	<summary>
 Serialize the source object into an XmlWriter following "Shallow Copy" business logic.
 </summary>
	<param name="source">The object to serialize.</param>
	<param name="writer">The destination for the xml.</param>
	<param name="propertyName">If serializing a class property provide the name of the property. If serializing a class then set to nothing.</param>
	<remarks>
 Shallow Copy means that only the exposed properties are serialized. 
 Hidden fields, properties, or protected properties are ignored.
 </remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadFields(System.Xml.XmlReader,System.Object)">
	<summary>
 Assings the Xml values to the fields.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<param name="target">The class containing the fields to update.</param>
	<returns>The updated class.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadProperties(System.Xml.XmlReader,System.Object)">
	<summary>
 Assings the Xml values to the properties.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<param name="target">The class containing the fields to update.</param>
	<returns>The updated class.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ReadChildren(System.Xml.XmlReader,System.Object,System.Object)">
	<summary>
 Analyzes the Xml to build the child objects adding them to the list property.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<param name="target">The class containing the list field to update.</param>
	<param name="propertyMember">The IEnumerable property.</param>
	<returns>The updated class.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteFields(System.Object,System.Xml.XmlWriter)">
	<summary>
 Translates the fields of object, target, into Xml Elements.
 </summary>
	<param name="source">The object to serialize.</param>
	<param name="writer">The destination for the xml.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.WriteProperties(System.Object,System.Xml.XmlWriter)">
	<summary>
 Translates the properties of object, target, into Xml Elements.
 </summary>
	<param name="source">The object to serialize.</param>
	<param name="writer">The destination for the xml.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.MoveToRootNode(System.Xml.XmlReader)">
	<summary>
 Advances to the first node
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.MoveToValueNode(System.Xml.XmlReader)">
	<summary>
 Advance to the inner node, the tag between the open and closing element tags to access the element's value.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.MoveToNextNode(System.Xml.XmlReader)">
	<summary>
 Advance to the next xml element.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.MoveToNextTag(System.Xml.XmlReader)">
	<summary>
 Advance to the next xml tag.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.GetAttributes(System.Xml.XmlReader)">
	<summary>
 Returns a key/value pair representing the attributes in the element.
 </summary>
	<param name="reader">The bufferred xml to analyze.</param>
	<returns>A sorted list of the attributes with the name as the key and the value as the value.</returns>
	<remarks>Executing this method querries the current node for the attributes without advancing to the next node.</remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.CreateClass(System.Collections.SortedList,System.Object,System.Reflection.MemberInfo)">
	<summary>
 Instantiates a new class.
 </summary>
	<param name="attributes">The attributes from the Xml used to identify the class type.</param>
	<param name="target">The class containing the reference to the member to create.</param>
	<param name="member">Information about the member to create.</param>
	<returns>The instantiated class.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.InstantiateMember(System.Reflection.Assembly@,System.String)">
	<summary>
 Creates an instance of the class.
 </summary>
	<param name="classAssembly">The assembly where the class to create is stored.</param>
	<param name="className">The fullname of the class to create.</param>
	<returns>If successful the instantiated class, otherwise nothing.</returns>
	<remarks></remarks>
</member><member name="M:Intelexion.Framework.CustomXmlSerializer.ExecuteClearMethod(System.Object)">
	<summary>
 Executes the clear method of the list object when supported.
 </summary>
	<param name="target">The class containing the method to execute.</param>
	<remarks></remarks>
</member><member name="T:Intelexion.Framework.CustomXmlSerializer">
	<summary>
 Serialize and deserialize objects into and from Xml.
 Write operations serialize the object into various target mediums.
 Read operations deserialize the object from various source mediums.
 </summary>
	<remarks>
 Designed and Created by Larry Steinle, 2006.
 
 Deserializing structure data types is not supported.
 Serialization/Deserialization of circular references is not supported.
 Designed for use with System.Xml.Serialization.IXmlSerializable.
 
 Standard FreeWare Licensing Applies. This software is to be used free of charge and may not be sold.

 Resources:
 http://www.programmersheaven.com/2/Dot-Net-Reflection-Part-1-Page2
 Elements are used with inner text at all times. Attributes aren't supported. 
 This ensures that we won't have any translation problems when loading the Xml into the target object.
 Note: This class does not support deserializing structures.

 Reason Structures Aren't Supported for Deserialization: http://www.dotnet247.com/247reference/msgs/31/158508.aspx
 The SetValue method takes an object parameter, which causes a boxing
 operation. SetValue ends up being called on the heap-based boxed copy
 rather than the stack-based copy. You need to unbox the heap-based copy
 back to the stack to see the end result of the SetValue call.
 
 Conversion From VB.Net to C#: http://www.harding.edu/USER/fmccown/WWW/vbnet_csharp_comparison.html
  To simplify conversion between VB.Net and C# the following rules have been applied:
    Avoided use of Do...Until logic because it is not supported in the "real" programming language: C#.
    Made all data types supportable in both C# and VB.Net, 2003 and 2005.
    Used System.Convert instead of CType whenever possible.
 
 FIX: December 9, 2006 - Code Changes to Correctly Manage IDictionary Object Types
 When serializing/deserializing classes that inherit from IDictionary the property
 IncludeClassNameAttribute must be set to a value of True. This is because the item
 property for an IDictionary class cannot be interogated for it's data type. The item
 property always returns a DictionaryEntry which has a value type of object.
 </remarks>
</member><member name="M:Intelexion.Framework.Model.BusinessProcess.BusinessProcessHandlerFactory.NewByClassName(System.String)">
	<summary>
 Funcion que obtiene un nuevo BPH por el nombre del tipo deseado y entrega una nueva instancia del
 tipo indicado o una instancia de un tipo extendido si existe una extension para el Tenant actual.
 </summary>
	<param name="BPHClassName">Nombre del BPH que se desea</param>
	<returns>Una instancia del BPH indicado o Nothing si no se encuentra dicho tipo en los modulos actuales</returns>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionesBphs.AgregarExtension(Intelexion.Framework.Extensibility.ExtensionBph)">
	<summary>
 Agrega una ExtensionBph al diccionario
 </summary>
	<param name="extension">ExtensionBph que se agrega al diccionario</param>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionesBphs.DescargarTenant(System.String)">
	<summary>
 Descarga las extensiones del tenant especificado
 </summary>
	<param name="nombreBPH">Identificador del Tenant</param>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionesBphs.CargarExtensionesPorTenant(System.Int32)">
	<summary>
 Carga los BPHExtendidos de un tenant específico
 </summary>
	<param name="nombreBPH">Tenant que se va a cargar</param>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionesBphs.IdTenantsEnDesuso(System.TimeSpan,System.TimeSpan)">
	<summary>
 Lista los tenant que se han utilizado en un intervalo de tiempo
 </summary>
	<param name="tiempo1">Tiempo de inicio</param>
	<param name="tiempo2">Tiempo final</param>
	<returns>Lista de enteros de Id</returns>
</member><member name="M:Intelexion.Framework.Extensibility.ExtensionesBphs.IdTenantsEnDesuso(System.TimeSpan)">
	<summary>
 Lista el id de los tenant que superan un tiempo de uso definido
 </summary>
	<param name="tiempo">Tiempo de uso</param>
	<returns>Lista de enteros de Id</returns>
</member>
</members>
</doc>