'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8689
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=2.0.50727.8689.
'
Namespace Fortia
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FortiaRHNServiceSoap", [Namespace]:="http://fortia.com/")>  _
    Partial Public Class FortiaRHNService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AltasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReingresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiosInformacionTrabajadorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiosSueldoTrabajadorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaInfonavitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDatosInfonavitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New(ByVal urlWS As String)
            MyBase.New()
            Me.Url = urlWS 'Global.InterfaceManager.My.MySettings.Default.InterfaceManager_Fortia_FortiaRHNService
            If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
                Me.UseDefaultCredentials = True
                Me.useDefaultCredentialsSetExplicitly = False
            Else
                Me.useDefaultCredentialsSetExplicitly = True
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AltasCompleted As AltasCompletedEventHandler
        
        '''<remarks/>
        Public Event ReingresosCompleted As ReingresosCompletedEventHandler
        
        '''<remarks/>
        Public Event BajasCompleted As BajasCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiosInformacionTrabajadorCompleted As CambiosInformacionTrabajadorCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiosSueldoTrabajadorCompleted As CambiosSueldoTrabajadorCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaInfonavitCompleted As AltaInfonavitCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDatosInfonavitCompleted As EliminarDatosInfonavitCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/Altas", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Altas( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal NumeroDeCartillaMilitar As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal Estatura As Double,  _
                    ByVal Peso As Double,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal Plaza As Integer,  _
                    ByVal EstadoNacimiento As String,  _
                    ByVal Familiares As String,  _
                    ByVal Escolaridad As String,  _
                    ByVal NumInfonavit As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Altas", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueInteg, SueMensual, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, NumeroDeCartillaMilitar, Nacionalidad, Estatura, Peso, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, Plaza, EstadoNacimiento, Familiares, Escolaridad, NumInfonavit})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginAltas( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal NumeroDeCartillaMilitar As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal Estatura As Double,  _
                    ByVal Peso As Double,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal Plaza As Integer,  _
                    ByVal EstadoNacimiento As String,  _
                    ByVal Familiares As String,  _
                    ByVal Escolaridad As String,  _
                    ByVal NumInfonavit As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Altas", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueInteg, SueMensual, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, NumeroDeCartillaMilitar, Nacionalidad, Estatura, Peso, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, Plaza, EstadoNacimiento, Familiares, Escolaridad, NumInfonavit}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAltas(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltasAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal NumeroDeCartillaMilitar As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal Estatura As Double,  _
                    ByVal Peso As Double,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal Plaza As Integer,  _
                    ByVal EstadoNacimiento As String,  _
                    ByVal Familiares As String,  _
                    ByVal Escolaridad As String,  _
                    ByVal NumInfonavit As String)
            Me.AltasAsync(ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueInteg, SueMensual, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, NumeroDeCartillaMilitar, Nacionalidad, Estatura, Peso, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, Plaza, EstadoNacimiento, Familiares, Escolaridad, NumInfonavit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltasAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal NumeroDeCartillaMilitar As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal Estatura As Double,  _
                    ByVal Peso As Double,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal Plaza As Integer,  _
                    ByVal EstadoNacimiento As String,  _
                    ByVal Familiares As String,  _
                    ByVal Escolaridad As String,  _
                    ByVal NumInfonavit As String,  _
                    ByVal userState As Object)
            If (Me.AltasOperationCompleted Is Nothing) Then
                Me.AltasOperationCompleted = AddressOf Me.OnAltasOperationCompleted
            End If
            Me.InvokeAsync("Altas", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueInteg, SueMensual, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, NumeroDeCartillaMilitar, Nacionalidad, Estatura, Peso, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, Plaza, EstadoNacimiento, Familiares, Escolaridad, NumInfonavit}, Me.AltasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltasOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltasCompleted(Me, New AltasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/Reingresos", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reingresos( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal Plaza As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Reingresos", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, Plaza})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginReingresos( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal Plaza As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reingresos", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, Plaza}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReingresos(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReingresosAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal Plaza As Integer)
            Me.ReingresosAsync(ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, Plaza, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReingresosAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal Plaza As Integer,  _
                    ByVal userState As Object)
            If (Me.ReingresosOperationCompleted Is Nothing) Then
                Me.ReingresosOperationCompleted = AddressOf Me.OnReingresosOperationCompleted
            End If
            Me.InvokeAsync("Reingresos", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, Plaza}, Me.ReingresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReingresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReingresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReingresosCompleted(Me, New ReingresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/Bajas", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Bajas(ByVal ClaTipoMov As Integer, ByVal ClaTrab As Integer, ByVal ClaEmpresa As Integer, ByVal FechaMov As String, ByVal FechaReal As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Bajas", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, FechaReal})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginBajas(ByVal ClaTipoMov As Integer, ByVal ClaTrab As Integer, ByVal ClaEmpresa As Integer, ByVal FechaMov As String, ByVal FechaReal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Bajas", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, FechaReal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBajas(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BajasAsync(ByVal ClaTipoMov As Integer, ByVal ClaTrab As Integer, ByVal ClaEmpresa As Integer, ByVal FechaMov As String, ByVal FechaReal As String)
            Me.BajasAsync(ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, FechaReal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BajasAsync(ByVal ClaTipoMov As Integer, ByVal ClaTrab As Integer, ByVal ClaEmpresa As Integer, ByVal FechaMov As String, ByVal FechaReal As String, ByVal userState As Object)
            If (Me.BajasOperationCompleted Is Nothing) Then
                Me.BajasOperationCompleted = AddressOf Me.OnBajasOperationCompleted
            End If
            Me.InvokeAsync("Bajas", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, FechaReal}, Me.BajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnBajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.BajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BajasCompleted(Me, New BajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/CambiosInformacionTrabajador", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiosInformacionTrabajador( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal Plaza As Integer,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal NumInfonavit As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("CambiosInformacionTrabajador", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueMensual, SueInteg, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, Plaza, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, Nacionalidad, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, NumInfonavit})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginCambiosInformacionTrabajador( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal Plaza As Integer,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal NumInfonavit As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CambiosInformacionTrabajador", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueMensual, SueInteg, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, Plaza, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, Nacionalidad, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, NumInfonavit}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCambiosInformacionTrabajador(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiosInformacionTrabajadorAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal Plaza As Integer,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal NumInfonavit As String)
            Me.CambiosInformacionTrabajadorAsync(ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueMensual, SueInteg, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, Plaza, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, Nacionalidad, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, NumInfonavit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiosInformacionTrabajadorAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal ApPaterno As String,  _
                    ByVal ApMaterno As String,  _
                    ByVal Nombre As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaCC As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal FechaIngreso As String,  _
                    ByVal FechaIngresoEmpresa As String,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal ClaFormaPago As Integer,  _
                    ByVal ClaBanco As Integer,  _
                    ByVal CuentaBanco As String,  _
                    ByVal Plaza As Integer,  _
                    ByVal LugarNac As String,  _
                    ByVal FechaNac As String,  _
                    ByVal Sexo As String,  _
                    ByVal Sindicalizado As Integer,  _
                    ByVal Email As String,  _
                    ByVal EdoCivil As Integer,  _
                    ByVal RFC As String,  _
                    ByVal NoIMSS As String,  _
                    ByVal CURP As String,  _
                    ByVal Calle As String,  _
                    ByVal Colonia As String,  _
                    ByVal CodPostal As Integer,  _
                    ByVal Ciudad As String,  _
                    ByVal Estado As String,  _
                    ByVal Telefono As String,  _
                    ByVal EstatusDelTrabajador As Integer,  _
                    ByVal FechaDeBaja As String,  _
                    ByVal Nacionalidad As String,  _
                    ByVal NombredelPadre As String,  _
                    ByVal NombredelaMadre As String,  _
                    ByVal AvisarenCasodeAccidente As String,  _
                    ByVal AvisoParentesco As Integer,  _
                    ByVal AvisoCalle As String,  _
                    ByVal AvisoCiudad As String,  _
                    ByVal AvisoCP As Integer,  _
                    ByVal AvisoTelefono As String,  _
                    ByVal ClaveRazonsocial As Integer,  _
                    ByVal NumInfonavit As String,  _
                    ByVal userState As Object)
            If (Me.CambiosInformacionTrabajadorOperationCompleted Is Nothing) Then
                Me.CambiosInformacionTrabajadorOperationCompleted = AddressOf Me.OnCambiosInformacionTrabajadorOperationCompleted
            End If
            Me.InvokeAsync("CambiosInformacionTrabajador", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, ApPaterno, ApMaterno, Nombre, ClaUbBase, ClaUbPago, ClaDepto, ClaPuesto, ClaClasif, ClaRolTurno, ClaTabPre, ClaPeriodo, ClaRegPat, ClaCC, TipoSal, SueDiario, SueMensual, SueInteg, FechaIngreso, FechaIngresoEmpresa, TipoContrato, ClaFormaPago, ClaBanco, CuentaBanco, Plaza, LugarNac, FechaNac, Sexo, Sindicalizado, Email, EdoCivil, RFC, NoIMSS, CURP, Calle, Colonia, CodPostal, Ciudad, Estado, Telefono, EstatusDelTrabajador, FechaDeBaja, Nacionalidad, NombredelPadre, NombredelaMadre, AvisarenCasodeAccidente, AvisoParentesco, AvisoCalle, AvisoCiudad, AvisoCP, AvisoTelefono, ClaveRazonsocial, NumInfonavit}, Me.CambiosInformacionTrabajadorOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiosInformacionTrabajadorOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiosInformacionTrabajadorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiosInformacionTrabajadorCompleted(Me, New CambiosInformacionTrabajadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/CambiosSueldoTrabajador", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiosSueldoTrabajador( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal ClaPeriodo As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("CambiosSueldoTrabajador", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, ClaPeriodo})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginCambiosSueldoTrabajador( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CambiosSueldoTrabajador", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, ClaPeriodo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCambiosSueldoTrabajador(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiosSueldoTrabajadorAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal ClaPeriodo As Integer)
            Me.CambiosSueldoTrabajadorAsync(ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, ClaPeriodo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiosSueldoTrabajadorAsync( _
                    ByVal ClaTipoMov As Integer,  _
                    ByVal ClaTrab As Integer,  _
                    ByVal ClaEmpresa As Integer,  _
                    ByVal FechaMov As String,  _
                    ByVal ClaUbBase As Integer,  _
                    ByVal ClaUbPago As Integer,  _
                    ByVal ClaCC As Integer,  _
                    ByVal ClaDepto As Integer,  _
                    ByVal ClaPuesto As Integer,  _
                    ByVal ClaClasif As Integer,  _
                    ByVal ClaRegPat As String,  _
                    ByVal ClaTabPre As Integer,  _
                    ByVal ClaRolTurno As Integer,  _
                    ByVal TipoSal As Integer,  _
                    ByVal TipoContrato As Integer,  _
                    ByVal SueDiario As Double,  _
                    ByVal SueMensual As Double,  _
                    ByVal SueInteg As Double,  _
                    ByVal ClaRazonSocial As Integer,  _
                    ByVal ClaPeriodo As Integer,  _
                    ByVal userState As Object)
            If (Me.CambiosSueldoTrabajadorOperationCompleted Is Nothing) Then
                Me.CambiosSueldoTrabajadorOperationCompleted = AddressOf Me.OnCambiosSueldoTrabajadorOperationCompleted
            End If
            Me.InvokeAsync("CambiosSueldoTrabajador", New Object() {ClaTipoMov, ClaTrab, ClaEmpresa, FechaMov, ClaUbBase, ClaUbPago, ClaCC, ClaDepto, ClaPuesto, ClaClasif, ClaRegPat, ClaTabPre, ClaRolTurno, TipoSal, TipoContrato, SueDiario, SueMensual, SueInteg, ClaRazonSocial, ClaPeriodo}, Me.CambiosSueldoTrabajadorOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiosSueldoTrabajadorOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiosSueldoTrabajadorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiosSueldoTrabajadorCompleted(Me, New CambiosSueldoTrabajadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/AltaInfonavit", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaInfonavit(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer, ByVal monto As Double, ByVal fechaSuspension As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AltaInfonavit", New Object() {claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento, monto, fechaSuspension})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginAltaInfonavit(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer, ByVal monto As Double, ByVal fechaSuspension As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AltaInfonavit", New Object() {claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento, monto, fechaSuspension}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAltaInfonavit(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaInfonavitAsync(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer, ByVal monto As Double, ByVal fechaSuspension As String)
            Me.AltaInfonavitAsync(claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento, monto, fechaSuspension, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaInfonavitAsync(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer, ByVal monto As Double, ByVal fechaSuspension As String, ByVal userState As Object)
            If (Me.AltaInfonavitOperationCompleted Is Nothing) Then
                Me.AltaInfonavitOperationCompleted = AddressOf Me.OnAltaInfonavitOperationCompleted
            End If
            Me.InvokeAsync("AltaInfonavit", New Object() {claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento, monto, fechaSuspension}, Me.AltaInfonavitOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaInfonavitOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaInfonavitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaInfonavitCompleted(Me, New AltaInfonavitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortia.com/EliminarDatosInfonavit", RequestNamespace:="http://fortia.com/", ResponseNamespace:="http://fortia.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDatosInfonavit(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("EliminarDatosInfonavit", New Object() {claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDatosInfonavit(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDatosInfonavit", New Object() {claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDatosInfonavit(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDatosInfonavitAsync(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer)
            Me.EliminarDatosInfonavitAsync(claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDatosInfonavitAsync(ByVal claEmpresa As Integer, ByVal claTrab As Integer, ByVal tipoMov As Integer, ByVal fechaMovimiento As String, ByVal numeroInfonavit As String, ByVal tipoDescuento As Integer, ByVal userState As Object)
            If (Me.EliminarDatosInfonavitOperationCompleted Is Nothing) Then
                Me.EliminarDatosInfonavitOperationCompleted = AddressOf Me.OnEliminarDatosInfonavitOperationCompleted
            End If
            Me.InvokeAsync("EliminarDatosInfonavit", New Object() {claEmpresa, claTrab, tipoMov, fechaMovimiento, numeroInfonavit, tipoDescuento}, Me.EliminarDatosInfonavitOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDatosInfonavitOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDatosInfonavitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDatosInfonavitCompleted(Me, New EliminarDatosInfonavitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub AltasCompletedEventHandler(ByVal sender As Object, ByVal e As AltasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub ReingresosCompletedEventHandler(ByVal sender As Object, ByVal e As ReingresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReingresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub BajasCompletedEventHandler(ByVal sender As Object, ByVal e As BajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub CambiosInformacionTrabajadorCompletedEventHandler(ByVal sender As Object, ByVal e As CambiosInformacionTrabajadorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiosInformacionTrabajadorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub CambiosSueldoTrabajadorCompletedEventHandler(ByVal sender As Object, ByVal e As CambiosSueldoTrabajadorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiosSueldoTrabajadorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub AltaInfonavitCompletedEventHandler(ByVal sender As Object, ByVal e As AltaInfonavitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaInfonavitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670")>  _
    Public Delegate Sub EliminarDatosInfonavitCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDatosInfonavitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8670"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDatosInfonavitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
End Namespace
